{"version":3,"sources":["components/AuthForm.js","routes/Auth.js","fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["AuthForm","auth","getAuth","useState","error","setError","newAccount","setNewAccount","email","password","ePlusPass","setEP","onChange3","target","value","name","prev","console","log","onSubmit","e","data","preventDefault","createUserWithEmailAndPassword","then","userCredential","user","catch","code","signInWithEmailAndPassword","placeholder","type","required","onChange","onClick","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","db","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getFirestore","Nweet","isOwner","editMode","setEditMode","text","setText","a","window","confirm","washingtonRef","doc","id","updateDoc","alert","onDelete","deleteDoc","url","storage","getStorage","deleteObject","ref","src","width","height","NweetFactory","userObj","nweet","setNweet","fileInput","useRef","attachment","setAttachment","event","storageRef","uid","uuidv4","uploadString","getDownloadURL","nweetObj","createdAt","Date","now","creator","addDoc","collection","current","maxLength","accept","files","file","reader","FileReader","onloadend","currentTarget","result","readAsDataURL","style","Home","list","setList","getNew","getDocs","querySnapshot","forEach","object","useEffect","q","query","orderBy","limit","unsub","onSnapshot","backData","docs","map","Navigation","to","displayName","Profile","refreshUser","navigate","useNavigate","getMyNweets","where","array","newDisplayName","setNewDisplayName","updateProfile","signOut","AppRouter","isLogIn","exact","path","element","App","init","setInit","setUserObj","setRefresh","onAuthStateChanged","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3dc008e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\n\nconst AuthForm = () => {\n  const auth = getAuth();\n  const [error, setError] = useState();\n  const [newAccount, setNewAccount] = useState(true);\n  const [ePlusPass, setEP] = useState({ email: \"\", password: \"\" });\n\n  const onChange3 = ({ target: { value, name } }) => {\n    setEP((prev) => ({ ...prev, [name]: value }));\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let data;\n    if (newAccount) {\n      createUserWithEmailAndPassword(auth, ePlusPass.email, ePlusPass.password)\n        .then((userCredential) => {\n          // Signed in\n          const user = userCredential.user;\n          console.log(user);\n          // ...\n        })\n        .catch((error) => {\n          setError(error.code);\n          // ..\n        });\n    } else {\n      data = signInWithEmailAndPassword(\n        auth,\n        ePlusPass.email,\n        ePlusPass.password\n      ).catch((error) => {\n        setError(error.code);\n      });\n    }\n    console.log(data);\n  };\n  console.log(ePlusPass);\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          placeholder=\"email\"\n          type=\"email\"\n          required\n          value={ePlusPass.email}\n          onChange={onChange3}\n        />\n        <input\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n          required\n          value={ePlusPass.password}\n          onChange={onChange3}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create a new account\" : \"Log In\"}\n        ></input>\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Log In\" : \"Create New Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport {\n  getAuth,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const auth = getAuth();\n\n  const onSocialClick = (e) => {\n    let provider;\n    if (e.target.name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (e.target.name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n\n    signInWithPopup(auth, provider);\n    // .then((result) => {\n    //   const credential = GoogleAuthProvider.credentialFromResult(result);\n    // })\n    // .catch((error) => {\n    //   // Handle Errors here.\n    //   const errorCode = error.code;\n    //   const errorMessage = error.message;\n    //   // The email of the user's account used.\n    //   const email = error.email;\n    //   // The AuthCredential type that was used.\n    //   const credential = GoogleAuthProvider.credentialFromError(error);\n    //   // ...\n    // });\n  };\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with GitHub\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getFirestore();\n// export const storage = getStorage(firebaseConfig);\nexport default app;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"fbase\";\nimport { deleteObject, getStorage, ref } from \"@firebase/storage\";\n\nconst Nweet = ({ data, isOwner }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [text, setText] = useState(data.text);\n  const toggleEditMode = () => {\n    setEditMode((prev) => !prev);\n  };\n  const onChange = (e) => {\n    setText(e.target.value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (text === data.text) return setEditMode(false);\n    const ok = window.confirm(\"Are you sure to change?\");\n    if (ok) {\n      try {\n        const washingtonRef = doc(db, \"nweet\", data.id);\n        await updateDoc(washingtonRef, {\n          text,\n        });\n      } catch (e) {\n        alert(\"뭔가 잘못됐어요!\");\n        return;\n      }\n      setEditMode(false);\n      alert(\"Edit compelete\");\n    }\n  };\n  console.log(editMode);\n  const onDelete = async () => {\n    const ok = window.confirm(\"Are you sure to Delete?\");\n    if (ok) {\n      try {\n        // throw \"error\";\n        await deleteDoc(doc(db, \"nweet\", data.id));\n\n        if (data.url) {\n          const storage = getStorage();\n          await deleteObject(ref(storage, data.url));\n        }\n      } catch (e) {\n        alert(\"뭔가 잘못됐어요!\");\n        return;\n      }\n      alert(\"Delete compelete\");\n    }\n  };\n  // console.log(data);\n  // if(data.creator === useruid)\n  return (\n    <div>\n      {!editMode ? (\n        <>\n          <h4>{data.text}</h4>\n          {data.url && <img src={data.url} width=\"50px\" height=\"50px\" />}\n        </>\n      ) : (\n        <form onSubmit={onSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Edit yout feeling\"\n            value={text}\n            onChange={onChange}\n            required\n          />\n        </form>\n      )}\n      {isOwner && (\n        <>\n          <button onClick={toggleEditMode}>\n            {!editMode ? \"edit\" : \"cancel\"}\n          </button>\n          <button onClick={!editMode ? onDelete : onSubmit}>\n            {!editMode ? \"delete\" : \"edit!\"}\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useRef, useState } from \"react\";\nimport {\n  getStorage,\n  ref,\n  uploadString,\n  getDownloadURL,\n} from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { db } from \"fbase\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { value, name },\n    } = event;\n    if (name === \"nweet\") {\n      setNweet(value);\n    }\n  };\n  const fileInput = useRef();\n  // console.log(fileInput.current.files);\n  const [attachment, setAttachment] = useState();\n  const onFileChange = (e) => {\n    const {\n      target: { files },\n    } = e;\n    const file = files[0];\n    console.log(files);\n    const reader = new FileReader();\n    reader.onloadend = (data) => setAttachment(data.currentTarget.result);\n    reader.readAsDataURL(file);\n  };\n  const onClearAttachment = () => {\n    setAttachment(null);\n    fileInput.current.value = null;\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let url = \"\";\n    if (attachment != \"\") {\n      const storage = getStorage();\n      const storageRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\n      await uploadString(storageRef, attachment, \"data_url\");\n      url = await getDownloadURL(storageRef);\n      console.log(url);\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creator: userObj.uid,\n      url,\n    };\n    await addDoc(collection(db, \"nweet\"), nweetObj);\n    fileInput.current.value = null;\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        name=\"nweet\"\n        type=\"text\"\n        onChange={onChange}\n        value={nweet}\n        placeholder=\"What's on your mind\"\n        maxLength={120}\n      />\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        ref={fileInput}\n      />\n      {attachment && (\n        <div>\n          <img src={attachment} style={{ height: 100, width: 100 }} />\n          <button onClick={onClearAttachment}>clear photo</button>\n          {/* <button onClick={}>upload</button> */}\n        </div>\n      )}\n      <input type=\"submit\" value=\"twit\" />\n    </form>\n  );\n};\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  collection,\n  getDocs,\n  onSnapshot,\n  query,\n  orderBy,\n  limit,\n} from \"firebase/firestore\";\nimport { db } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [list, setList] = useState([]);\n  // const storage = getStorage();\n  const getNew = async () => {\n    const querySnapshot = await getDocs(collection(db, \"nweet\"));\n    await querySnapshot.forEach((doc) => {\n      const object = { id: doc.id, ...doc.data() };\n      setList((prev) => [...prev, object]);\n    });\n  };\n  useEffect(() => {\n    const q = query(collection(db, \"nweet\"), orderBy(\"createdAt\"), limit(3));\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      const backData = querySnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setList(backData);\n    });\n    return () => unsub();\n  }, []);\n  console.log(userObj.uid);\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      {list.map((data) => (\n        <Nweet\n          key={data.id}\n          data={data}\n          isOwner={data.creator === userObj.uid}\n        />\n      ))}\n      <button onClick={getNew}>get New!</button>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName} 의 Profille</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\nexport default Navigation;\n","import React, { useState, useEffect } from \"react\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  getFirestore,\n  collection,\n  query,\n  where,\n  getDocs,\n  orderBy,\n} from \"firebase/firestore\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const auth = getAuth();\n  const navigate = useNavigate();\n  const onLogOutClick = () => {\n    signOut(auth);\n    navigate(\"/\");\n    // refreshUser();\n  };\n  const [list, setList] = useState();\n  const getMyNweets = async () => {\n    const db = getFirestore();\n\n    const q = await query(\n      collection(db, \"nweet\"),\n      where(\"creator\", \"==\", userObj.uid),\n      orderBy(\"createdAt\", \"desc\")\n    );\n\n    const querySnapshot = await getDocs(q);\n    const array = await querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    console.log(array);\n    setList(array);\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      console.log(\"Profile updated!\");\n      // const user = auth.currentUser;\n      refreshUser();\n    }\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"Update Profile\" onSubmit={onSubmit} />\n      </form>\n      <button onClick={onLogOutClick}>Log out</button>\n      {list &&\n        list.map((data) => (\n          <div key={data.id}>\n            {data.url !== \"\" && <img src={data.url} />}\n            <h5>{data.text}</h5>\n            <div>{data.createdAt}</div>\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLogIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLogIn && <Navigation userObj={userObj} />}\n      <Routes>\n        {isLogIn ? (\n          <>\n            <Route exact path=\"/\" element={<Home userObj={userObj} />}>\n              {/* <Home /> */}\n            </Route>\n            <Route\n              exact\n              path=\"/profile\"\n              element={<Profile userObj={userObj} refreshUser={refreshUser} />}\n            />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\" element={<Auth />}>\n              {/* <Auth /> */}\n            </Route>\n          </>\n        )}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { getAuth, onAuthStateChanged, updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const auth = getAuth();\n  // const [isLogIn, setIsLogIn] = useState(false);\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [refresh, setRefresh] = useState(false);\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // setIsLogIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => updateProfile(user, args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n    // return ()=>{}\n  }, []);\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setRefresh((prev) => !prev);\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => updateProfile(user, args),\n    });\n  };\n  return init ? (\n    <AppRouter\n      isLogIn={Boolean(userObj)}\n      userObj={userObj}\n      refreshUser={refreshUser}\n    />\n  ) : (\n    \"Initialize...\"\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n// firebase;\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}